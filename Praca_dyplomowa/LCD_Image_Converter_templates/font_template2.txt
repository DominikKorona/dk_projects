$(start_block_header)
/*******************************************************************************
* generated by lcd-image-converter rev.$(app_rev) from $(app_date)
* $(doc_data_type)
* filename: $(doc_filename)
* name: $(doc_name)
* family: $(fnt_family)
* size: $(fnt_size)
* style: $(fnt_style)
* included characters: $(fnt_string)
* antialiasing: $(fnt_antialiasing)
* type: $(fnt_width_type)
* encoding: $(fnt_encoding)
* unicode bom: $(fnt_use_bom)
*
* preset name: $(out_preset_name)
* data block size: $(img_data_block_size) bit(s), uint$(img_data_block_size)_t
* RLE compression enabled: $(img_rle)
* conversion type: $(pre_conv_type), $(pre_mono_type) $(pre_mono_edge)
* split to rows: $(img_split_to_rows)
* bits per pixel: $(out_bpp)
*
* preprocess:
*  main scan direction: $(pre_scan_main)
*  line scan direction: $(pre_scan_sub)
*  inverse: $(pre_inverse)
*******************************************************************************/

*******************************************************************************/
/*header file $(doc_name).h */
#include <stdint.h>
#include "stm32f4xx_hal.h"

 typedef struct {
     uint8_t width;
     uint8_t height;
     const uint8_t *data;
} FontDef_t;

typedef struct {
	uint16_t Length;      /*!< String length in units of pixels */
	uint16_t Height;      /*!< String height in units of pixels */
} FONTS_SIZE_t;

extern FontDef_t $(doc_name_ws);



$(end_block_header)
*******************************************************************************/
/*source file*/
#include $(doc_name).h

const uint8_t $(doc_name_ws)[] = {
    $(start_block_images_table)
    $(out_image_preview)
    $(out_image_data),
$(end_block_images_table)
};

/* Font information for $(doc_name_ws) */
FontDef_t $(doc_name_ws)_$(out_image_width)x$(out_image_height) =
{
    $(out_image_width), /*  Width, in pixels, of space character */
    $(out_image_height), /*  Character height */
    $(doc_name_ws), /*  Character bitmap array */, 
};